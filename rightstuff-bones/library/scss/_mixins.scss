/******************************************************************
Site Name:
Author:

Stylesheet: Mixins & Constants Stylesheet

This is where you can take advantage of Sass' great features:
Mixins & Constants. I won't go in-depth on how they work exactly,
there are a few articles below that will help do that. What I will
tell you is that this will help speed up simple changes like
changing a color or adding CSS3 techniques gradients.

A WORD OF WARNING: It's very easy to overdo it here. Be careful and
remember less is more.

******************************************************************/

/*********************
CLEARFIXIN'
*********************/

// Contain floats: nicolasgallagher.com/micro-clearfix-hack/
.clearfix {
	zoom: 1;
	&:after { content:""; height:0; display:block; font-size:0; visibility:0; clear: both; }
}
@mixin clearfixer() {
	content:""; height:0; display:block; font-size:0; visibility:0; clear:both;
}

/*********************
TOOLS
*********************/

// http://www.zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement/
.image-replacement {
	text-indent: 100%;
	white-space: nowrap;
	overflow: hidden;
}


/*********************
COLORS
Need help w/ choosing your colors? Try this site out:
http://0to255.com/
*********************/

$alert-yellow:        #ebe16f;
$alert-red:           #fbe3e4;
$alert-green:         #e6efc2;
$alert-blue:          #d5edf8;

$black:               #000;
$white:               #fff;

$bones-pink:          #f01d4f;
$bones-blue:          #1990db;

$base-color:          #333;
$rs-pink:             #cc3366;
$rs-blue:             #66a5a5;
$twt-color:           #6c0c16;
$fb-blue:             #305891;
$twit-blue:           #2ca8d2;

$link-color:          $rs-blue;
$link-hover:          darken($link-color, 9%);
$heading-link-color:  $rs-pink;


/*
Here's a great tutorial on how to
use color variables properly:
http://sachagreif.com/sass-color-variables/
*/


/*********************
TYPOGRAPHY
*********************/

$sans-serif:        "Helvetica Neue", Helvetica, Arial, sans-serif;
$serif:             "Georgia", Cambria, Times New Roman, Times, serif;

@import url(http://fonts.googleapis.com/css?family=Oswald:400,700,300);

/* 	To embed your own fonts, use this syntax
	and place your fonts inside the
	library/fonts folder. For more information
	on embedding fonts, go to:
	http://www.fontsquirrel.com/
	Be sure to remove the comment brackets.
*/

/*	@font-face {
    	font-family: 'Font Name';
    	src: url('library/fonts/font-name.eot');
    	src: url('library/fonts/font-name.eot?#iefix') format('embedded-opentype'),
             url('library/fonts/font-name.woff') format('woff'),
             url('library/fonts/font-name.ttf') format('truetype'),
             url('library/fonts/font-name.svg#font-name') format('svg');
    	font-weight: normal;
    	font-style: normal;
	}
*/

/*
use the best ampersand
http://simplebits.com/notebook/2008/08/14/ampersands-2/
*/
span.amp {
  font-family: Baskerville,'Goudy Old Style',Palatino,'Book Antiqua',serif !important;
  font-style: italic;
}

// text alignment
.text-left   { text-align: left; }
.text-center { text-align: center; }
.text-right  { text-align: right; }


// alerts and notices
%alert {
	margin: 10px;
	padding: 5px 18px;
	border: 1px solid;
}

.alert-help {
	@extend %alert;
	border-color: darken($alert-yellow, 5%);
	background: $alert-yellow;
}

.alert-info {
	@extend %alert;
	border-color: darken($alert-blue, 5%);
	background: $alert-blue;
}

.alert-error {
	@extend %alert;
	border-color: darken($alert-red, 5%);
	background: $alert-red;
}

.alert-success {
	@extend %alert;
	border-color: darken($alert-green, 5%);
	background: $alert-green;
}

/*********************
TRANSITION
*********************/

/*
I totally rewrote this to be cleaner and easier to use.
You'll need to be using Sass 3.2+ for these to work.
Thanks to @anthonyshort for the inspiration on these.
USAGE: @include transition(all 0.2s ease-in-out);
*/

// defining prefixes so we can use them in mixins below
$prefixes: ("-webkit-", "-moz-", "-ms-", "-o-",  "");

@mixin transition($transition...) {
	@each $prefix in $prefixes {
		#{$prefix}transition: $transition;
	}
}

@mixin transform($transform...) {
	@each $prefix in $prefixes {
		#{$prefix}transform: $transform;
	}
}

/*********************
CSS3 GRADIENTS
Be careful with these since they can
really slow down your CSS. Don't overdo it.
*********************/

/* @include css-gradient(#dfdfdf,#f8f8f8); */
@mixin css-gradient($from: #dfdfdf, $to: #f8f8f8, $vstart:"", $vend:"", $hstart:"", $hend:"" ) {
	background-color: $to;
	background-image: -webkit-gradient(linear, unquote($hstart) unquote($vstart), unquote($hstart) unquote($vend), from($from), to($to));
	background-image: -webkit-linear-gradient(unquote($hstart) unquote($vstart), $from, $to);
	background-image: -moz-linear-gradient(unquote($hstart) unquote($vstart), $from, $to);
	background-image: -o-linear-gradient(unquote($hstart) unquote($vstart), $from, $to);
	background-image: linear-gradient(to unquote($hend) unquote($vend), $from, $to);
}

/*********************
BOX SIZING
*********************/

/* @include box-sizing(border-box); */
/* NOTE: value of "padding-box" is only supported in Gecko. So
probably best not to use it. I mean, were you going to anyway? */
@mixin box-sizing($type: border-box) {
	@each $prefix in $prefixes {
		#{$prefix}box-sizing: $type;
	}
}

@mixin border-radius($radius:5px) {
	@each $prefix in $prefixes {
		#{$prefix}border-radius: $radius;
	}
}


/*********************
BUTTONS
*********************/

.button, .button:visited {
	font-family: $sans-serif;
	border: 1px solid darken($link-color, 13%);
	border-top-color: darken($link-color, 7%);
	border-left-color: darken($link-color, 7%);
	padding: 4px 12px;
	color: $white;
	display: inline-block;
	font-size: 11px;
	font-weight: bold;
	text-decoration: none;
	text-shadow: 0 1px rgba(0,0,0, .75);
	cursor: pointer;
	margin-bottom: 20px;
	line-height: 21px;
	@include border-radius(4px);
	@include css-gradient($link-color, darken($link-color, 5%));


	&:hover, &:focus {
		color: $white;
	  	border: 1px solid darken($link-color, 13%);
	  	border-top-color: darken($link-color, 20%);
	 	border-left-color: darken($link-color, 20%);
		@include css-gradient(darken($link-color, 5%), darken($link-color, 10%));
	}

	&:active {
		@include css-gradient(darken($link-color, 5%), $link-color);
	}
}

.blue-button, .blue-button:visited {
	border-color: darken($bones-blue, 10%);
	text-shadow: 0 1px 1px darken($bones-blue, 10%);
	@include css-gradient( $bones-blue, darken($bones-blue, 5%) );
	box-shadow: inset 0 0 3px lighten($bones-blue, 16%);

	&:hover, &:focus {
		border-color: darken($bones-blue, 15%);
		@include css-gradient( darken($bones-blue, 4%), darken($bones-blue, 10%) );
	}
	&:active {
		@include css-gradient( darken($bones-blue, 5%), $bones-blue );
	}
}

.btn {
	display:inline-block;
	text-align:center;
	text-decoration:none;
	@include border-radius(3px);
	@include css-gradient( $rs-blue, darken($rs-blue, 5%), top, bottom );
	border:0;
	color:#fff;
	font-family:Oswald;
	font-size:14px;
	padding:0 20px;
	text-shadow:0 0 2px rgba(0,0,0,.35);
	&:hover {
		color:#fff;
		@include css-gradient( $rs-blue, darken($rs-blue, 20%), top, bottom );
	}
	&.large {
		height:32px;
		line-height:32px;
		padding:5px 20px;
	}
}
.btn-fb {
	background:$fb-blue;
	&:hover {
		background:lighten($fb-blue, 15%);
	}
}
.btn-twit {
	background:$twit-blue;
	&:hover {
		background:lighten($twit-blue, 15%);
	}
}

@mixin triangle-up($color:#fff,$border:25px,$offset:0,$z:2) {
	border-color:$color transparent;
	border-style:solid;
	border-width:0 $border $border $border;
	content:"";
	margin-left:$offset;
	margin-top:0;
	position:absolute;
	left:15px;
	right:auto;
	bottom:0;
	top:auto;
	z-index:$z;
}

@mixin triangle-left($color:#fff,$border:25px,$offset:0,$z:2) {
	border-color:transparent $color;
	border-style:solid;
	border-width:$border $border $border 0;
	margin-left:0;
	margin-top:$offset;
	position:absolute;
	left:auto;
	right:0;
	bottom:auto;
	top:25px;
	z-index:$z;
}
